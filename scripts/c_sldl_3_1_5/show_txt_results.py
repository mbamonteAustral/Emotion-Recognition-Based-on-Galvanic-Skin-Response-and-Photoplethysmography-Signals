#%%--------------------------------------------------------------------

import numpy as np

data = [
    [0.47143456, 0.73376634, 0.73930481, 0.7267348, 0.73354664, 0.30718258, 0.63158333, 0.79019608, 0.48314317, 0.63014047],
    [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan],
    [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan],
    [0.29905103, 0.63853962, 0.6872549, 0.56872199, 0.62783805, 0.24545862, 0.62591912, 0.62424242, 0.60611984, 0.61556284],
    [0.52995238, 0.73522727, 0.81925134, 0.68919502, 0.7542159, 0.48949954, 0.73115385, 0.76907308, 0.70304482, 0.73812487],
    [0.08561829, 0.53312253, 0.69393939, 0.22444337, 0.48048944, 0.02082436, 0.5108498, 0.68778966, 0.09200651, 0.43707147],
    [0.37052826, 0.68535539, 0.69376114, 0.64424664, 0.67184709, 0.26783804, 0.64011438, 0.65178253, 0.6047824, 0.62868765],
    [0.01306272, 0.49961538, 0.58547237, 0.25113979, 0.43020516, 0.41861923, 0.69564344, 0.73609626, 0.65413368, 0.69562011],
    [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan],
    [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan],
    [0.05779608, 0.52266798, 0.68181818, 0.17721428, 0.45825607, 0.12159206, 0.55105311, 0.66078431, 0.29882225, 0.49156786],
    [0.70492775, 0.85177126, 0.85864528, 0.84577587, 0.85175399, 0.48571434, 0.73780798, 0.7597148, 0.71818881, 0.73745705],
    [0.02180095, 0.50821429, 0.84393939, 0.0439155, 0.47181259, 0.25218961, 0.5957967, 0.66381462, 0.46884363, 0.56639239],
    [0.16372367, 0.5646645, 0.68734403, 0.3748184, 0.53387196, 0.16912183, 0.56666667, 0.6785205, 0.38595673, 0.52945088],
    [0., 0.5, 0.77183601, 0., 0.43558153, -0.0193633, 0.49044118, 0.48983957, 0.47078333, 0.48175106],
    [0.07213648, 0.53933824, 0.53787879, 0.51146792, 0.52806025, 0.16640324, 0.57218615, 0.68449198, 0.33734162, 0.52480166],
    [0.07855349, 0.53307981, 0.5973262, 0.35992751, 0.47861959, -0.01153846, 0.49583333, 0.72664884, 0., 0.420786],
    [0.40809657, 0.69934837, 0.71729055, 0.68057735, 0.69706905, 0.60425569, 0.80294118, 0.80142602, 0.79769625, 0.79989319],
    [0.18768263, 0.59013889, 0.61229947, 0.5275169, 0.57028444, 0.31053059, 0.65298246, 0.66372549, 0.63648358, 0.64991631],
    [0.09528437, 0.5365415, 0.68761141, 0.29905414, 0.49724962, 0.53246756, 0.76654412, 0.76613191, 0.76089127, 0.76408386],
    [-0.00243248, 0.49908425, 0.63360071, 0.0270666, 0.39404313, 0.16554649, 0.57954212, 0.64572193, 0.46947422, 0.55636478],
    [0.16114855, 0.57664835, 0.65445633, 0.43662941, 0.55226224, 0.33814242, 0.66202851, 0.68475936, 0.61759703, 0.65107332],
    [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan]
]

numpy_array = np.array(data)
print(numpy_array)



    #%% ----------------------------------------
    # Print results from simulations files (.csv)

    # from functions import print_results_from_file 

    # print_results_from_file(print_results=True, show_plot=False)

print("instances: ", np.shape(numpy_array))

#%%----------------------------------------------------------------
# Calculate the standard deviation of each column
np.set_printoptions(linewidth=np.inf)
mean = np.round(np.nanmean(numpy_array, axis=0), decimals=3)
print("Mean of each column:")
print("  v_c   v_u   v_a   v_g   v_f1  a_c   a_u   a_a   a_g   a_f1")
print(mean)


std_dev = np.round(np.nanstd(numpy_array, axis=0), decimals=3)
print("  v_c   v_u   v_a   v_g   v_f1  a_c   a_u   a_a   a_g   a_f1")
print("Standard Deviation of each column:")
print(std_dev)


# Print the result after handling division by zero
with np.errstate(divide='ignore', invalid='ignore'):
    result = np.round(np.where(mean == 0, 0, std_dev * 100 / mean), decimals=2)
    print("std_dev*100/mean:")
    print("  v_c   v_u   v_a   v_g   v_f1  a_c   a_u   a_a   a_g   a_f1")
    print(result)

